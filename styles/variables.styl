// Helpers
web()
  if __WEB__ is defined
    {block}

native()
  unless __WEB__ is defined
    {block}

_getHashValue(hashMap, key, defaultKey, type)
  // Workaround global built-in function s()
  // http://stylus-lang.com/docs/bifs.html#sfmt-
  key = 's' if key is s

  key = '' + key
  if key in hashMap
    return hashMap[key]
  else
    msg = 'There is no "%s()" for "%s". Using default %s ("%s").'
    defaultKey = '' + defaultKey
    warn('' + s(msg, type, key, type, defaultKey))
    return hashMap[defaultKey]

// -----------------------------------------------------------------------------
//   Gutters
// -----------------------------------------------------------------------------

$gutters = {
  xs :  3px  // Quarter font-size
  s  :  5px  // Half font-size
  m  : 10px  //------> Normal gutter (font-size)
  l  : 20px  // line
  xl : 30px  // 2 font-sizes
  xxl: 40px  // 2 lines
  xxxl: 100%
}
gutter(key = m)
  _getHashValue($gutters, key, m, 'gutter')

// -----------------------------------------------------------------------------
//   Font Sizes
// -----------------------------------------------------------------------------

$fontSizes = {
  xxs: 8px   // Small CAPS
  xs : 10px  // Small captions/Descriptions
  s  : 12px  // Tooltips/Descriptions
  m  : 14px  //------> Normal text
  l  : 16px  // Heading
  xl : 20px  // Section title
  xxl: 24px  // Page title
}
font(key = m)
  _getHashValue($fontSizes, key, m, 'font')

// -----------------------------------------------------------------------------
//   Line Heights
// -----------------------------------------------------------------------------

$lines = {
  no : 14px  // alias for xs ('no' is short for 'no line')
  xs : 14px  // No line-height, good for one-line stuff which needs to be v-centered
  s  : 18px   // Compact line-height, good for tooltips/descriptions
  m  : 20px  // Standard line height
  l  : 30px  // Bigger line-height, good for reading
  xl : 40px
  xxl: 60px
}
line(key = m)
  _getHashValue($lines, key, m, 'line')

// -----------------------------------------------------------------------------
//   Shadows
// -----------------------------------------------------------------------------

shadow(key = m)
  if key is l
    +web()
      box-shadow 0 13px 27px -5px rgba(50,50,93,.25), 0 8px 16px -8px rgba(0,0,0,.3)
    +native()
      elevation 5
  if key is m
    +web()
      box-shadow 0 1px 5px 0 rgba(0,0,0,.07), 0 7px 17px 0 rgba(0,0,0,.1)
    +native()
      elevation 3
  if key is s
    +web()
      box-shadow 0 0 2px 0 rgba(0,0,0,.07), 0 3px 8px 0 rgba(0,0,0,.1)
    +native()
      elevation 1
  if key is xs
    +web()
      box-shadow 0 4px 6px rgba(50,50,93,.11), 0 1px 3px rgba(0,0,0,.08)

// Font styles

text(key = main)
  if key is main
    color: $colors.main
  if key is bold
    color: $colors.main
    font-weight 600
  if key is description
    color: $colors.description
    font-weight: 200

// -----------------------------------------------------------------------------
//   Media
// -----------------------------------------------------------------------------

$mobile ?= 480px
$tablet ?= 768px
$desktop ?= 1024px
$wide ?= 1300px

$cardHeight ?= 150px

// -----------------------------------------------------------------------------
//   Fonts
// -----------------------------------------------------------------------------
// NOTE: when changing vars here, don't forget to also @import the font files
//       in /design/base.styl

// Compact font
$fontNormal = "Source Sans Pro", "Helvetica Neue", "Helvetica", "Roboto", "Arial", "Verdana", sans-serif
$fontHeading = "Source Sans Pro", "Helvetica", "Roboto", "Arial", "Verdana", sans-serif

$fontNative = system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Ubuntu, "Helvetica Neue", sans-serif

// Round fonts (similar to Gotham Rounded A/B)
// $fontNormal = "Varela Round", "Helvetica Neue", "Helvetica", "Roboto", "Arial", sans-serif
// $fontHeading = "Montserrat", "Helvetica", "Roboto", "Arial", sans-serif
